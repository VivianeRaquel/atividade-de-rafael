{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ResultMedia from \"../Result_media/index\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      Media1 = _useState2[0],\n      setMedia1 = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Media2 = _useState4[0],\n      setMedia2 = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Media3 = _useState6[0],\n      setMedia3 = _useState6[1];\n\n  var _useState7 = useState(\"Preencha as notas acima.\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messageMedia = _useState8[0],\n      setMessageMedia = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Media = _useState10[0],\n      setMedia = _useState10[1];\n\n  var _useState11 = useState(\"Calcular\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      TextButton = _useState12[0],\n      setTextButton = _useState12[1];\n\n  function mediaCalculator() {\n    return setMedia((weight / (height * height)).toFixed(2));\n  }\n\n  function validationMedia() {\n    if (Media1 != null && Media2 != null && Media3 != null) {\n      imcCalculator();\n      setMedia1(null);\n      setMedia2(null);\n      setMedia3(null);\n      setMessageMedia(\"Sua media é igual:\");\n      setTextButton(\"Calcular Novamente\");\n      return;\n    }\n\n    setMedia(null);\n    setTextButton(\"Calcular\");\n    setMessageMedia(\"preencha os campos\");\n  }\n\n  return _jsxs(View, {\n    style: styles.formContext,\n    children: [_jsxs(View, {\n      style: styles.form,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setMedia1,\n        value: Media1,\n        placeholder: \"Digite a primeira nota.\",\n        keyboardType: \"numeric\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setMedia2,\n        value: Media2,\n        placeholder: \"Digite a segunda nota.\",\n        keyboardType: \"numeric\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setMedia3,\n        value: Media3,\n        placeholder: \"Digite a terceira nota.\",\n        keyboardType: \"numeric\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonCalculator,\n        onPress: function onPress() {\n          validationMedia();\n        },\n        children: _jsx(Text, {\n          style: styles.textbuttonCalculator,\n          children: TextButton\n        })\n      })]\n    }), _jsx(ResultMedia, {\n      messageResultMedia: messageMedia,\n      ResultMedia: Media\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/geand/Desktop/PC/projetos/atividade_avaliativa_de_desenvolvimento_mobile/src/content/Form_media/index.js"],"names":["React","useState","ResultMedia","styles","Form","Media1","setMedia1","Media2","setMedia2","Media3","setMedia3","messageMedia","setMessageMedia","Media","setMedia","TextButton","setTextButton","mediaCalculator","weight","height","toFixed","validationMedia","imcCalculator","formContext","form","input","buttonCalculator","textbuttonCalculator"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAGA,OAAOC,WAAP;AACA,OAAOC,MAAP;;;AAEA,eAAe,SAASC,IAAT,GAAiB;AAI5B,kBAA2BH,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA2BL,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOM,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA2BP,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAuCT,QAAQ,CAAC,0BAAD,CAA/C;AAAA;AAAA,MAAOU,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAyBX,QAAQ,CAAC,IAAD,CAAjC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAmCb,QAAQ,CAAC,UAAD,CAA3C;AAAA;AAAA,MAAOc,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,WAASC,eAAT,GAA0B;AAExB,WAAOH,QAAQ,CAAE,CAACI,MAAM,IAAEC,MAAM,GAACA,MAAT,CAAP,EAAyBC,OAAzB,CAAiC,CAAjC,CAAF,CAAf;AACD;;AAID,WAASC,eAAT,GAA2B;AAEzB,QAAGhB,MAAM,IAAI,IAAV,IAAmBE,MAAM,IAAG,IAA5B,IAAoCE,MAAM,IAAG,IAAhD,EAAqD;AAEnDa,MAAAA,aAAa;AACbhB,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,eAAe,CAAC,oBAAD,CAAf;AACAI,MAAAA,aAAa,CAAC,oBAAD,CAAb;AACA;AACD;;AACDF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,aAAa,CAAC,UAAD,CAAb;AACAJ,IAAAA,eAAe,CAAC,oBAAD,CAAf;AACD;;AAID,SAME,MAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACoB,WAApB;AAAA,eACM,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEpB,MAAM,CAACqB,IAApB;AAAA,iBAIK,KAAC,SAAD;AACA,QAAA,KAAK,EAAErB,MAAM,CAACsB,KADd;AAEA,QAAA,YAAY,EAAEnB,SAFd;AAGA,QAAA,KAAK,EAAED,MAHP;AAIA,QAAA,WAAW,EAAC,yBAJZ;AAKA,QAAA,YAAY,EAAC;AALb,QAJL,EAeK,KAAC,SAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACsB,KADhB;AAEE,QAAA,YAAY,EAAEjB,SAFhB;AAGE,QAAA,KAAK,EAAED,MAHT;AAIE,QAAA,WAAW,EAAC,wBAJd;AAKE,QAAA,YAAY,EAAC;AALf,QAfL,EAyBK,KAAC,SAAD;AACE,QAAA,KAAK,EAAEJ,MAAM,CAACsB,KADhB;AAEE,QAAA,YAAY,EAAEf,SAFhB;AAGE,QAAA,KAAK,EAAED,MAHT;AAIE,QAAA,WAAW,EAAC,yBAJd;AAKE,QAAA,YAAY,EAAC;AALf,QAzBL,EAmCK,KAAC,gBAAD;AACG,QAAA,KAAK,EAAEN,MAAM,CAACuB,gBADjB;AAEG,QAAA,OAAO,EAAE,mBAAK;AACZL,UAAAA,eAAe;AAChB,SAJJ;AAAA,kBAQA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAElB,MAAM,CAACwB,oBAApB;AAAA,oBAA2CZ;AAA3C;AARA,QAnCL;AAAA,MADN,EAmDK,KAAC,WAAD;AAAa,MAAA,kBAAkB,EAAEJ,YAAjC;AAA+C,MAAA,WAAW,EAAEE;AAA5D,MAnDL;AAAA,IANF;AA8DD","sourcesContent":["import React, {useState} from 'react'\r\nimport { Text, TextInput , View, TouchableOpacity } from 'react-native'\r\n\r\nimport ResultMedia from '../Result_media/index'//importando compónente\r\nimport styles from './style'; //importando o style\r\n\r\nexport default function Form () {\r\n\r\n    //calculo de imc\r\n\r\n    const [Media1, setMedia1]= useState(null)\r\n    const [Media2, setMedia2]= useState(null)\r\n    const [Media3, setMedia3]= useState(null)\r\n    const [messageMedia, setMessageMedia]= useState(\"Preencha as notas acima.\");\r\n    const [Media, setMedia]= useState(null)\r\n    const [TextButton, setTextButton]= useState(\"Calcular\");\r\n    \r\n    function mediaCalculator(){\r\n\r\n      return setMedia ((weight/(height*height)).toFixed(2))\r\n    }\r\n \r\n    //veriifcar se altura e peso está vazio\r\n\r\n    function validationMedia() {\r\n\r\n      if(Media1 != null  && Media2 !=null && Media3 !=null){\r\n\r\n        imcCalculator()\r\n        setMedia1(null)\r\n        setMedia2(null)\r\n        setMedia3(null)\r\n        setMessageMedia(\"Sua media é igual:\")\r\n        setTextButton(\"Calcular Novamente\")\r\n        return\r\n      }\r\n      setMedia(null)\r\n      setTextButton(\"Calcular\")\r\n      setMessageMedia(\"preencha os campos\")\r\n    }\r\n\r\n    //front end / campos de texto e botões\r\n  \r\n    return (\r\n\r\n      //aqui fica os campos para preencher e o botão calcular\r\n\r\n      //keyboard type e o tipo de teclado, especificamente o teclado numerico\r\n\r\n      <View style={styles.formContext}>\r\n            <View style={styles.form}>\r\n\r\n\r\n                 {/*campo de digitar*/}\r\n                 <TextInput \r\n                 style={styles.input}\r\n                 onChangeText={setMedia1}\r\n                 value={Media1}\r\n                 placeholder='Digite a primeira nota.'\r\n                 keyboardType='numeric'//determinado o tipo de teclado\r\n                 \r\n                 />\r\n                 \r\n                 \r\n                 {/*campo de digitar*/}\r\n                 <TextInput\r\n                   style={styles.input}\r\n                   onChangeText={setMedia2}\r\n                   value={Media2}\r\n                   placeholder='Digite a segunda nota.'\r\n                   keyboardType='numeric'//determinado o tipo de teclado\r\n\r\n                 />\r\n\r\n                 {/*campo de digitar*/}\r\n                 <TextInput\r\n                   style={styles.input}\r\n                   onChangeText={setMedia3}\r\n                   value={Media3}\r\n                   placeholder='Digite a terceira nota.'\r\n                   keyboardType='numeric'//determinado o tipo de teclado\r\n\r\n                 />\r\n               \r\n                 {/*botãos com efeito*/}\r\n                 <TouchableOpacity \r\n                    style={styles.buttonCalculator}\r\n                    onPress={() =>{\r\n                      validationMedia()\r\n                    }}\r\n                 >\r\n\r\n                 {/*texto dentro do botão*/}  \r\n                 <Text style={styles.textbuttonCalculator}>{TextButton}</Text>\r\n                 \r\n                 </TouchableOpacity>\r\n                 \r\n            </View> \r\n\r\n           {/*resultado do imc*/}\r\n           <ResultMedia messageResultMedia={messageMedia} ResultMedia={Media}/> \r\n\r\n      </View>\r\n\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}