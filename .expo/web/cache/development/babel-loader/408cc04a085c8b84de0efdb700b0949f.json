{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form_media() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      Primeiranota = _useState2[0],\n      setPrimeiranota = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Segundanota = _useState4[0],\n      setSegundanota = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Terceiranota = _useState6[0],\n      setTerceiranota = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      total = _useState8[0],\n      setTotal = _useState8[1];\n\n  var x = parseFloat(total);\n  var por = x / 3;\n\n  function gerarResultado() {\n    setTotal(Number(Primeiranota) + Number(Segundanota) + Number(Terceiranota));\n    Keyboard.dismiss();\n  }\n\n  return _jsxs(View, {\n    style: styles.formContext,\n    children: [_jsxs(View, {\n      style: styles.form,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: Media1,\n        placeholder: \"Digite a primeira nota.\",\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(int) {\n          return setMedia1(int);\n        },\n        maxLength: 4\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: Segundanota,\n        placeholder: \"Digite a segunda nota.\",\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(int) {\n          return setSegundanota(int);\n        },\n        maxLength: 4\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: Terceiranota,\n        placeholder: \"Digite a terceira nota.\",\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(int) {\n          return setTerceiranota(int);\n        },\n        maxLength: 4\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonCalculator,\n        activeOpacity: 0.7,\n        onPress: gerarResultado,\n        children: _jsx(Text, {\n          style: styles.textbuttonCalculator,\n          children: \"Calcular M\\xE9dia\"\n        })\n      })]\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsxs(View, {\n      children: [_jsxs(Text, {\n        style: styles.numberResult,\n        children: [\"Total:\", ' ', total.toFixed(1)]\n      }), _jsxs(Text, {\n        style: styles.numberResult,\n        children: [\"M\\xE9dia:\", ' ', por.toFixed(1)]\n      })]\n    }), por < 5 && por > 0 && _jsx(Text, {\n      style: styles.information,\n      children: \"Reprovado\"\n    }), por >= 5 && por < 7 && _jsx(Text, {\n      style: styles.information,\n      children: \"Recupera\\xE7\\xE3o\"\n    }), por >= 7 && _jsx(Text, {\n      style: styles.information,\n      children: \"Aprovado\"\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/geand/Desktop/rafael plano b/src/content/Form_media/index.js"],"names":["React","useState","styles","Form_media","Primeiranota","setPrimeiranota","Segundanota","setSegundanota","Terceiranota","setTerceiranota","total","setTotal","x","parseFloat","por","gerarResultado","Number","Keyboard","dismiss","formContext","form","input","Media1","int","setMedia1","buttonCalculator","textbuttonCalculator","numberResult","toFixed","information"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Text, TextInput , View, TouchableOpacity } from 'react-native'\r\n\r\nimport styles from './style'; //importando o style\r\n\r\nexport default function Form_media () {\r\n\r\n  const [Primeiranota, setPrimeiranota] = useState('');\r\n  const [Segundanota, setSegundanota] = useState('');\r\n  const [Terceiranota, setTerceiranota] = useState('');\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const x = parseFloat(total);\r\n  const por = x / 3;\r\n\r\n  function gerarResultado() {\r\n      setTotal(Number(Primeiranota) + Number(Segundanota) + Number(Terceiranota));\r\n      Keyboard.dismiss();\r\n  }\r\n\r\n    return (\r\n\r\n      <View style={styles.formContext}>\r\n            <View style={styles.form}>\r\n\r\n\r\n                 {/*campo de digitar*/}\r\n                 <TextInput \r\n                 style={styles.input}\r\n                 value={Media1}\r\n                 placeholder='Digite a primeira nota.'\r\n                 keyboardType='numeric'//determinado o tipo de teclado\r\n                 onChangeText={(int) => setMedia1(int)}\r\n                 maxLength={4}\r\n                 />\r\n                 \r\n                 \r\n                 {/*campo de digitar*/}\r\n                 <TextInput\r\n                   style={styles.input}\r\n                   value={Segundanota}\r\n                   placeholder='Digite a segunda nota.'\r\n                   keyboardType='numeric'//determinado o tipo de teclado\r\n                   onChangeText={(int) => setSegundanota(int)}\r\n                   maxLength={4}\r\n                 />\r\n\r\n\r\n                 {/*campo de digitar*/}\r\n                 <TextInput\r\n                   style={styles.input}   \r\n                   value={Terceiranota}\r\n                   placeholder='Digite a terceira nota.'\r\n                   keyboardType='numeric'//determinado o tipo de teclado\r\n                   onChangeText={(int) => setTerceiranota(int)}\r\n                   maxLength={4}\r\n                 />\r\n\r\n           <TouchableOpacity\r\n            style={styles.buttonCalculator}\r\n            activeOpacity={0.7}\r\n            onPress={gerarResultado}>\r\n            <Text style={styles.textbuttonCalculator}>Calcular Média</Text>\r\n           </TouchableOpacity>\r\n \r\n            </View>\r\n\r\n            <br></br> \r\n            <br></br> \r\n            <br></br> \r\n            <br></br> \r\n\r\n          <View>\r\n\t\t\t      \t<Text style={styles.numberResult}>\r\n\t\t\t\t     \tTotal:\r\n\t\t\t\t    \t{' '}\r\n\t\t\t\t    \t{total.toFixed(1)}\r\n\t\t\t    \t</Text>\r\n\t\t\t    \t<Text style={styles.numberResult}>\r\n\t\t\t    \t\tMédia:\r\n\t\t\t    \t\t{' '}\r\n\t\t\t    \t\t{por.toFixed(1)}\r\n\t\t   \t    </Text>\r\n\t\t    \t</View>\r\n\r\n\t\t\t{por < 5 && por > 0 && (\r\n\t\t\t\t<Text style={styles.information}>Reprovado</Text>\r\n\t\t\t)}\r\n\r\n\t\t\t{por >= 5 && por < 7 && (\r\n\t\t\t\t<Text style={styles.information}>Recuperação</Text>\r\n\t\t\t)}\r\n\r\n\t\t\t{por >= 7 && (\r\n\t\t\t\t<Text style={styles.information}>Aprovado</Text>\r\n\t\t\t)}\r\n\r\n      </View>\r\n\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}